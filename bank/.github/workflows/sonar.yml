name: Sonar + NuGet CI
# nuget: requerido para autograding
env:
  DOTNET_VERSION: '8.0.413'
  SONAR_ORG: 'krcrimson'
  SONAR_PROJECT: 'krcrimson_apibank'
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-test-sonar-nuget:
    name: Build, Test, Sonar, NuGet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install SonarScanner
        run: dotnet tool install -g dotnet-sonarscanner

      - name: SonarCloud Begin
        run: >
          dotnet-sonarscanner begin /k:"${{ env.SONAR_PROJECT }}" /o:"${{ env.SONAR_ORG }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.qualitygate.wait=true

      - name: Restore dependencies
        run: dotnet restore Bank.sln

      - name: Build
        run: dotnet build Bank.sln --configuration Release --no-restore

      - name: Test with coverage
        run: dotnet test Bank.sln --no-build --verbosity normal --collect:"XPlat Code Coverage"

      - name: SonarCloud End
        run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Pack NuGet package
        run: dotnet pack Bank.Domain/Bank.Domain.csproj --configuration Release --output ./nupkg --no-build /p:PackageVersion=1.0.0

      - name: Publish to GitHub Packages
        run: dotnet nuget push ./nupkg/*.nupkg --source "github" --api-key ${{ secrets.GITHUB_TOKEN }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate release notes from commits
        id: release_notes
        run: |
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          git log --pretty=format:'- %s' $(git describe --tags --abbrev=0)..HEAD >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v1.0.0
          name: "Release 1.0.0"
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}